/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.InstructorFrames.InstructorGenFrames;




import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import java.text.SimpleDateFormat;

import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

import main.util.InstructorMethods.InstructorAsisDocs.UploadFileAPI;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import main.InstructorFrames.InstructorHomeScreen;
import main.util.API_Actions.ConvertirDatos;
import main.util.API_AdminActions.API_Admin_BuscarUsuario;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.json.JSONObject;

import main.util.models.ComboBoxModels;
import main.util.models.UserSession;


/**
 *
 * @author Propietario
 */
public class ExcelGenFrame extends javax.swing.JFrame {

    /**
     * Creates new form ExcelGenFrame
     */
    public DefaultTableModel modeloTabla;
    public Workbook workbook;
    public Sheet sheet;
    public int rowNum;
    
    public ExcelGenFrame() {
        initComponents();
        modif();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        InstructorNombre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        HoraFin = new javax.swing.JLabel();
        HoraInicio = new javax.swing.JLabel();
        IngresoCodAprendiz = new javax.swing.JTextField();
        RegistrarAsistencia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAsis = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        FinalizarAsis = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Competencia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Ambiente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Ficha = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ProgramaFormacionCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Instructor:");

        InstructorNombre.setText("XXXXXXXXXXXXXXXXXX");

        jLabel3.setText("Fecha Fin:");

        jLabel4.setText("Fecha Inicio:");

        HoraFin.setText("XX:XX");

        HoraInicio.setText("XX:XX");

        RegistrarAsistencia.setText("Registrar Asistencia");
        RegistrarAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarAsistenciaActionPerformed(evt);
            }
        });

        tablaAsis.setBackground(new java.awt.Color(255, 255, 255));
        tablaAsis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Tipo de Documento", "Documento", "Programa formacion", "Nivel formacion", "Competencia", "Hora de Ingreso", "Estado de asistencia"
            }
        ));
        tablaAsis.setFocusable(false);
        tablaAsis.setName(""); // NOI18N
        tablaAsis.setRowHeight(44);
        tablaAsis.setSelectionBackground(new java.awt.Color(215, 213, 177));
        jScrollPane1.setViewportView(tablaAsis);

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        FinalizarAsis.setText("Finalizar asistencia");
        FinalizarAsis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarAsisActionPerformed(evt);
            }
        });

        jLabel5.setText("Competencia");

        jLabel6.setText("Ambiente");

        jLabel7.setText("Ficha");

        jLabel8.setText("Programa de Formacion");

        ProgramaFormacionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Ambiente, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Competencia, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(InstructorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(HoraFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Ficha, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProgramaFormacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(115, 115, 115)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FinalizarAsis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(IngresoCodAprendiz, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RegistrarAsistencia, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(InstructorNombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(Competencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(HoraInicio))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(HoraFin))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Ambiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FinalizarAsis, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Ficha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProgramaFormacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IngresoCodAprendiz)
                    .addComponent(RegistrarAsistencia, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void modif(){
        InstructorNombre.setText(UserSession.getInstance().getNombres());
        workbook = new XSSFWorkbook(); // O cualquier otra inicialización necesaria
        sheet = workbook.createSheet("Asistencia");
        modeloTabla = new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "Nombres", "Apellidos", "Tipo Documento", "Documento", "Programa Formación", "Nivel Formación", "Curso", "Fecha", "Estado"
            }
        );
        ComboBoxModels ComboBoxModels = new ComboBoxModels();
        
        try {
            List<String> tiposProgramaFormacion = ComboBoxModels.BoxProgramaFormacionModel();
            if (tiposProgramaFormacion == null) {
                JOptionPane.showMessageDialog(null, "Hubo un error cargando las sedes de la API");
            } else {
                tiposProgramaFormacion.add(0, "Seleccionar...");
                DefaultComboBoxModel<String> ProgramaFormacionBoxModel = new DefaultComboBoxModel<>(ComboBoxModels.toArray(tiposProgramaFormacion));
                ProgramaFormacionCB.setModel(ProgramaFormacionBoxModel);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        
        this.setLocationRelativeTo(null);
        IngresoCodAprendiz.requestFocusInWindow();
        tablaAsis.setModel(modeloTabla);

        HoraInicio.setText(String.valueOf(HoraActual()));
        HoraFin.setText(String.valueOf(HoraInasistencia()));
    }
    
    
    public String HoraActual(){
        Calendar calendar = Calendar.getInstance();
        Date fechaActual = new Date();

        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
        // Obtener la hora actual formateada en XX:XX AM/PM
        String horaFormateada = sdf.format(fechaActual);
        return horaFormateada;
    }
    
    public String HoraTardia(){
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.HOUR_OF_DAY, 1);
        Date fechaEn5Horas = calendar.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
        String horaFin = sdf.format(fechaEn5Horas);
        return horaFin;
    }
    
    
    public String HoraInasistencia(){
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.HOUR_OF_DAY, 5);
        Date fechaEn5Horas = calendar.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
        String horaFin = sdf.format(fechaEn5Horas);
        return horaFin;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        InstructorHomeScreen instructorHomeScreen = new InstructorHomeScreen();
        instructorHomeScreen.dispose();
        this.dispose();
        instructorHomeScreen.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RegistrarAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarAsistenciaActionPerformed
        API_Admin_BuscarUsuario buscarUsuario = new API_Admin_BuscarUsuario();
        Integer codigoAprendiz = Integer.valueOf(IngresoCodAprendiz.getText());
        if (codigoAprendiz != null) {
            try {
                JSONObject aprendizData = buscarUsuario.AdminBuscarUsuario(codigoAprendiz);
                if (aprendizData != null) {
                    SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
                    Date horaActual = sdf.parse(HoraActual());
                    Date horaTardia = sdf.parse(HoraTardia());
                    Date horaInasistencia = sdf.parse(HoraInasistencia());

                    String estado;
                    if (horaActual.before(horaTardia)) {
                        estado = "A tiempo";
                    } else if (horaActual.before(horaInasistencia)) {
                        estado = "Tarde";
                    } else {
                        estado = "Inasistencia";
                    }
                    // Añadir estos datos a la JTable
                    modeloTabla.addRow(new Object[]{aprendizData.getString("nombres"), 
                            aprendizData.getString("apellidos"),
                            aprendizData.getString("tipoDocumento"),
                            aprendizData.getInt("documento"),
                            aprendizData.getString("programaFormacion"),
                            aprendizData.getString("nivelFormacion"),
                            Competencia.getText(),
                            HoraActual(),
                            estado
                    });
                    IngresoCodAprendiz.setText("");
                } else {
                    int respuesta = JOptionPane.showConfirmDialog(null, "No se han encontrado coincidencias, desea registrar al Aprendiz?", "Confirmación", JOptionPane.YES_NO_CANCEL_OPTION);
                    
                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            InstructorRegAprendiz regAprendiz = new InstructorRegAprendiz();
                            regAprendiz.setVisible(true);
                            
                        case JOptionPane.NO_OPTION:break;
                        case JOptionPane.CANCEL_OPTION:break;
                        case JOptionPane.CLOSED_OPTION:break;
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al conectar con la API.");
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese el código del aprendiz.");
        }
    }//GEN-LAST:event_RegistrarAsistenciaActionPerformed

    
    
    private void FinalizarAsisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarAsisActionPerformed
       Workbook workbook = null;

        try {
            ConvertirDatos convertirDatos = new ConvertirDatos();
            Map<String, Object> params = new HashMap<>();
            params.put("Instructor", InstructorNombre.getText());
            params.put("Competencia", Competencia.getText());
            params.put("Ambiente", Ambiente.getText());
            params.put("Ficha", Integer.valueOf(Ficha.getText()));
            params.put("IDProgramaFormacion", convertirDatos.ObtenerIDProgramaFormacion(ProgramaFormacionCB.getSelectedItem().toString()));
            System.out.println(params);
            workbook = new XSSFWorkbook();
            Sheet sheet = workbook.createSheet("Asistencia");

            // Crear encabezados
            Row headerRow = sheet.createRow(0);
            for (int i = 0; i < modeloTabla.getColumnCount(); i++) {
                Cell cell = headerRow.createCell(i);
                cell.setCellValue(modeloTabla.getColumnName(i));
            }

            // Rellenar filas con los datos de la JTable
            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                Row row = sheet.createRow(i + 1);
                for (int j = 0; j < modeloTabla.getColumnCount(); j++) {
                    Cell cell = row.createCell(j);
                    cell.setCellValue(modeloTabla.getValueAt(i, j).toString());
                }
            }

            // Guardar el archivo en el sistema
            String filePath = "asistencia.xlsx";
            try (FileOutputStream fileOut = new FileOutputStream(filePath)) {
                workbook.write(fileOut);
            }

            // Enviar el archivo a la API
            File file = new File(filePath);
            UploadFileAPI uploadFileAPI = new UploadFileAPI();
            uploadFileAPI.uploadFileAPI(file, params);

            // Abrir el archivo guardado (opcional)
            if (Desktop.isDesktopSupported() && file.exists()) {
                Desktop.getDesktop().open(file);
            }

            JOptionPane.showMessageDialog(null, "Archivo Excel generado y subido exitosamente.");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al generar el archivo Excel.");
            e.printStackTrace();
        } finally {
            if (workbook != null) {
                try {
                    workbook.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_FinalizarAsisActionPerformed



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExcelGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExcelGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExcelGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExcelGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExcelGenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ambiente;
    private javax.swing.JTextField Competencia;
    private javax.swing.JTextField Ficha;
    private javax.swing.JButton FinalizarAsis;
    private javax.swing.JLabel HoraFin;
    private javax.swing.JLabel HoraInicio;
    private javax.swing.JTextField IngresoCodAprendiz;
    private javax.swing.JLabel InstructorNombre;
    private javax.swing.JComboBox<String> ProgramaFormacionCB;
    private javax.swing.JButton RegistrarAsistencia;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAsis;
    // End of variables declaration//GEN-END:variables
}


