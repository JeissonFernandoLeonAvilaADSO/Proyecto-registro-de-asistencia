/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.InstructorFrames;

import main.util.API_AdminActions.API_Admin_UsersApplications.API_Admin_AprendizApplications;
import main.util.models.ComboBoxModels;
import main.util.models.DataTables;
import main.util.models.UsersModels.AprendizModel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 *
 * @author usuario
 */
public class InstructorApList extends JPanel {

    /**
     * Creates new form InstructorApList
     */
    private DefaultTableModel ListarApModel;

    public InstructorApList() {

        initComponents();
        aditionalConfig();
    }

    public void aditionalConfig(){

        ListarApModel = new DefaultTableModel(new Object[]{
                "Documento", "Tipo Documento", "Nombres", "Fecha Nacimiento",
                "Telefono", "Correo", "Genero", "Residencia"}, 0);

        ListaAprendicesFichaTable.setModel(ListarApModel);
        ComboBoxModels cbm = new ComboBoxModels();
        FichasAsociadasCB.setModel(cbm.generarComboBoxModelPorTipo("Fichas"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        FichasAsociadasCB = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaAprendicesFichaTable = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        FichasAsociadasCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        FichasAsociadasCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FichasAsociadasCBActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Fichas");

        ListaAprendicesFichaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ListaAprendicesFichaTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1029, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(FichasAsociadasCB, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FichasAsociadasCB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void FichasAsociadasCBActionPerformed(ActionEvent evt) {//GEN-FIRST:event_FichasAsociadasCBActionPerformed
        API_Admin_AprendizApplications api = new API_Admin_AprendizApplications();
        List<AprendizModel> aprendices = null;

        // Verificar si se seleccionó una ficha válida
        String selectedFicha = FichasAsociadasCB.getSelectedItem().toString();
        if (!selectedFicha.equals("Seleccionar...")) {
            try {
                // Convertir el valor seleccionado a Integer
                Integer numeroFicha = Integer.parseInt(selectedFicha);
                aprendices = api.obtenerAprendicesCompletosPorFicha(numeroFicha);

                // Limpiar la tabla antes de añadir nuevos datos
                ListarApModel.setRowCount(0);

                // Iterar sobre la lista de aprendices y agregar cada uno a la tabla
                for (AprendizModel aprendiz : aprendices) {
                    System.out.println("Aprendiz: " + aprendiz);

                    ListarApModel.addRow(new Object[]{
                            aprendiz.getDocumento(),
                            aprendiz.getTipoDocumento(),
                            aprendiz.getNombres() + " " + aprendiz.getApellidos(),
                            aprendiz.getFechaNacimiento().toString(),
                            aprendiz.getTelefono(),
                            aprendiz.getCorreo(),
                            aprendiz.getGenero(),
                            aprendiz.getResidencia()
                    });
                }

                // Asegurarse de que la tabla esté usando el modelo actualizado
                ListaAprendicesFichaTable.setModel(ListarApModel);
                ListaAprendicesFichaTable.revalidate();
                ListaAprendicesFichaTable.repaint();
                ListaAprendicesFichaTable.setRowHeight(30);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error al convertir el valor de la ficha: " + e.getMessage());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

    }//GEN-LAST:event_FichasAsociadasCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FichasAsociadasCB;
    private javax.swing.JTable ListaAprendicesFichaTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
