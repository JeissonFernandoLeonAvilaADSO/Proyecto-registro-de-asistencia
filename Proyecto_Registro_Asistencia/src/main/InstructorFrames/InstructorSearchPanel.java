/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.InstructorFrames;

import main.util.API_Actions.API_AsistenciasApplications;
import main.util.models.ButtonColumnHelper;
import main.util.models.ComboBoxModels;
import main.util.models.DataTables;
import main.util.models.UserSession;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Propietario
 */
public class InstructorSearchPanel extends javax.swing.JPanel {

    /**
     * Creates new form InstructorSearchPanel
     */
    public InstructorSearchPanel() {
        initComponents();
        AditionalConfig();
    }
    
    public void AditionalConfig() {
        ComboBoxModels cbm = new ComboBoxModels();

        AmbienteCB.setModel(cbm.generarComboBoxModelPorTipo("Ambientes"));
        ProgramaFormacionCB.setModel(cbm.generarComboBoxModelPorTipo("ProgramaFormacion"));

        llenarTablaAsistencias(null, null, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaAsistencias = new javax.swing.JTable();
        ProgramaFormacionCB = new javax.swing.JComboBox<>();
        AmbienteCB = new javax.swing.JComboBox<>();
        FichaCB = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 34, 64));
        jLabel3.setText("Buscardor");

        TablaAsistencias.setBackground(new java.awt.Color(255, 255, 255));
        TablaAsistencias.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TablaAsistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Ambiente", "Competencia", "Instructor", "Fecha", "Hora inicio", "Hora fin", "Tabla"
            }
        ));
        TablaAsistencias.setName(""); // NOI18N
        TablaAsistencias.setRowHeight(44);
        TablaAsistencias.setSelectionBackground(new java.awt.Color(215, 213, 177));
        jScrollPane1.setViewportView(TablaAsistencias);

        ProgramaFormacionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProgramaFormacionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProgramaFormacionCBActionPerformed(evt);
            }
        });

        AmbienteCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        AmbienteCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmbienteCBActionPerformed(evt);
            }
        });

        FichaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        FichaCB.setEnabled(false);
        FichaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FichaCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(AmbienteCB, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ProgramaFormacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(FichaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProgramaFormacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AmbienteCB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FichaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ProgramaFormacionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProgramaFormacionCBActionPerformed
        if (!ProgramaFormacionCB.getSelectedItem().equals("Seleccionar...") && !ProgramaFormacionCB.getSelectedItem().equals("No aplica")) {
            try {
                DataTables dt = new DataTables();
                List<Map<String, Object>> tiposFichas = dt.obtenerFichasPorPrograma(ProgramaFormacionCB.getSelectedItem().toString());
                List<String> tiposFichasStr = tiposFichas.stream()
                        .map(ficha -> ficha.get("NumeroFicha").toString()) // Asegúrate de usar la clave correcta para obtener el número de la ficha
                        .collect(Collectors.toList());

                // Añadir la opción "Seleccionar..." al inicio de la lista
                tiposFichasStr.add(0, "Seleccionar...");
                DefaultComboBoxModel<String> FichasBoxModel = new DefaultComboBoxModel<>(tiposFichasStr.toArray(new String[0]));
                FichaCB.setModel(FichasBoxModel);
                if(!AmbienteCB.getSelectedItem().equals("Seleccionar...")) {
                    llenarTablaAsistencias(AmbienteCB.getSelectedItem().toString(), ProgramaFormacionCB.getSelectedItem().toString(), null);
                } else if(!AmbienteCB.getSelectedItem().equals("Seleccionar...")) {
                    llenarTablaAsistencias(null, ProgramaFormacionCB.getSelectedItem().toString(), null);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            FichaCB.setEnabled(true);
        } else {
            FichaCB.setSelectedItem("Seleccionar...");
            FichaCB.setEnabled(false);
        }

    }//GEN-LAST:event_ProgramaFormacionCBActionPerformed

    private void AmbienteCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmbienteCBActionPerformed
        if(!ProgramaFormacionCB.getSelectedItem().equals("Seleccionar...") && !FichaCB.getSelectedItem().equals("Seleccionar...")) {
            llenarTablaAsistencias(AmbienteCB.getSelectedItem().toString(), ProgramaFormacionCB.getSelectedItem().toString(), (Integer)FichaCB.getSelectedItem());
        } else if (!ProgramaFormacionCB.getSelectedItem().equals("Seleccionar...")) {
            llenarTablaAsistencias(AmbienteCB.getSelectedItem().toString(), ProgramaFormacionCB.getSelectedItem().toString(), null);
        } else {
            llenarTablaAsistencias(AmbienteCB.getSelectedItem().toString(), null, null);
        }
    }//GEN-LAST:event_AmbienteCBActionPerformed

    private void FichaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FichaCBActionPerformed
        if(!FichaCB.getSelectedItem().equals("Seleccionar...")) {
            llenarTablaAsistencias(AmbienteCB.getSelectedItem().toString(), ProgramaFormacionCB.getSelectedItem().toString(), (Integer)FichaCB.getSelectedItem());
        }
    }//GEN-LAST:event_FichaCBActionPerformed


    private void llenarTablaAsistencias(String ambiente, String programaFormacion, Integer ficha) {
        DefaultTableModel modeloTabla = new DefaultTableModel(
                new Object[]{"Fecha", "Clase", "Ambiente", "Ficha", "Instructor", "Tipo Asistencia", "Archivo Excel"},
                0
        );

        // Obtener el documento del usuario actual (Instructor) desde la sesión
        String documentoInstructor = UserSession.getInstance().getDocumento();

        // Llamar a la API para obtener las asistencias del instructor
        API_AsistenciasApplications asistenciasInstructor = new API_AsistenciasApplications();
        List<Map<String, Object>> asistencias = asistenciasInstructor.obtenerAsistenciasFiltradas(documentoInstructor, ambiente, programaFormacion, ficha);

        // Rellenar el modelo de la tabla con los datos obtenidos
        for (Map<String, Object> asistencia : asistencias) {
            String Fecha = null;
            SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
            try {
                Date date = inputFormat.parse((String) asistencia.get("Fecha"));

                // Formatear la fecha a un formato más legible
                SimpleDateFormat outputFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                Fecha = outputFormat.format(date);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }

            modeloTabla.addRow(new Object[]{
                    Fecha,
                    asistencia.get("ClaseFormacion"),
                    asistencia.get("Ambiente"),
                    asistencia.get("Ficha"),
                    asistencia.get("Instructor"),
                    asistencia.get("TipoAsistencia"),
                    "Abrir Excel"  // Botón en la última columna para abrir el archivo
            });
        }

        // Configurar el modelo en la tabla
        TablaAsistencias.setModel(modeloTabla);

        // Configurar el botón en la última columna para abrir el archivo Excel
        TableColumn archivoColumn = TablaAsistencias.getColumnModel().getColumn(6); // Columna de "Archivo Excel"
        archivoColumn.setCellRenderer(new ButtonColumnHelper.ButtonRendererExcel());  // Renderizador del botón
        archivoColumn.setCellEditor(new ButtonColumnHelper.ButtonEditorExcel(new JCheckBox(), TablaAsistencias, asistencias)); // Editor del botón con JTable y lista de asistencias
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AmbienteCB;
    private javax.swing.JComboBox<String> FichaCB;
    private javax.swing.JComboBox<String> ProgramaFormacionCB;
    private javax.swing.JTable TablaAsistencias;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
