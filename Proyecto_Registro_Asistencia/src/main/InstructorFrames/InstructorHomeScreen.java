/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.InstructorFrames;



import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import main.InstructorFrames.InstructorGenFrames.ExcelGenFrame;
import main.LoginFrame;
import main.util.API_Actions.API_AsistenciasApplications;
import main.util.models.ButtonColumnHelper;
import main.util.models.ButtonStyler;
import main.util.models.UserSession;

import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.List;
import java.util.Map;
import javax.swing.table.TableColumn;

/**
 *
 * @author Propietario
 */
public class InstructorHomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form InstructorHomeScreen
     */

    
    public InstructorHomeScreen() {
        initComponents();
        AditionalConfig();
        ModifComponent();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MenuInicio = new javax.swing.JButton();
        MenuBusqueda = new javax.swing.JButton();
        MenuUsuario = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        NombreUsuarioInstructor = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        CerrarSesion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        GenerarNuevaAsistencia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaAsistencias = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        RefrescarTablaAsis = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(102, 132, 147));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/util/icons/LogoSena.png"))); // NOI18N

        MenuInicio.setBackground(new java.awt.Color(0, 34, 64));
        MenuInicio.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        MenuInicio.setForeground(new java.awt.Color(255, 255, 255));
        MenuInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/util/icons/HomeIcon.png"))); // NOI18N
        MenuInicio.setText("Inicio");
        MenuInicio.setBorderPainted(false);
        MenuInicio.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MenuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuInicioActionPerformed(evt);
            }
        });

        MenuBusqueda.setBackground(new java.awt.Color(0, 34, 64));
        MenuBusqueda.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        MenuBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        MenuBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/util/icons/SearchIcon.png"))); // NOI18N
        MenuBusqueda.setText("Busqueda");
        MenuBusqueda.setBorderPainted(false);
        MenuBusqueda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MenuBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuBusquedaActionPerformed(evt);
            }
        });

        MenuUsuario.setBackground(new java.awt.Color(0, 34, 64));
        MenuUsuario.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        MenuUsuario.setForeground(new java.awt.Color(255, 255, 255));
        MenuUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/util/icons/UsuarioIcon.png"))); // NOI18N
        MenuUsuario.setText("Usuario");
        MenuUsuario.setBorderPainted(false);
        MenuUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MenuUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuUsuarioActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre usuario");

        NombreUsuarioInstructor.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        NombreUsuarioInstructor.setForeground(new java.awt.Color(255, 255, 255));
        NombreUsuarioInstructor.setText("XXXXXXXXXXXXXXXXXX");

        jButton7.setBackground(new java.awt.Color(255, 208, 78));
        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 34, 64));
        jButton7.setText("INSTRUCTOR");
        jButton7.setBorderPainted(false);

        CerrarSesion.setBackground(new java.awt.Color(57, 169, 0));
        CerrarSesion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        CerrarSesion.setForeground(new java.awt.Color(255, 255, 255));
        CerrarSesion.setText("Cerrar Sesi√≥n");
        CerrarSesion.setBorderPainted(false);
        CerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NombreUsuarioInstructor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CerrarSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(MenuInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MenuBusqueda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MenuUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NombreUsuarioInstructor)
                .addGap(5, 5, 5)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(MenuInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 34, 64));

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));

        HomePanel.setBackground(new java.awt.Color(255, 255, 255));

        GenerarNuevaAsistencia.setBackground(new java.awt.Color(57, 169, 0));
        GenerarNuevaAsistencia.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        GenerarNuevaAsistencia.setForeground(new java.awt.Color(255, 255, 255));
        GenerarNuevaAsistencia.setText("Nueva tabla de asistencia");
        GenerarNuevaAsistencia.setBorderPainted(false);
        GenerarNuevaAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarNuevaAsistenciaActionPerformed(evt);
            }
        });

        TablaAsistencias.setBackground(new java.awt.Color(255, 255, 255));
        TablaAsistencias.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TablaAsistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Ambiente", "Competencia", "Instructor", "Fecha", "Hora inicio", "Hora fin", "Tabla"
            }
        ));
        TablaAsistencias.setName(""); // NOI18N
        TablaAsistencias.setRowHeight(44);
        TablaAsistencias.setSelectionBackground(new java.awt.Color(215, 213, 177));
        jScrollPane1.setViewportView(TablaAsistencias);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 34, 64));
        jLabel2.setText("Bienvenido al sistema de registro de asistencia");

        RefrescarTablaAsis.setBackground(new java.awt.Color(57, 169, 0));
        RefrescarTablaAsis.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        RefrescarTablaAsis.setForeground(new java.awt.Color(255, 255, 255));
        RefrescarTablaAsis.setText("Refrescar Tabla");
        RefrescarTablaAsis.setBorderPainted(false);
        RefrescarTablaAsis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefrescarTablaAsisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomePanelLayout.createSequentialGroup()
                .addContainerGap(904, Short.MAX_VALUE)
                .addComponent(RefrescarTablaAsis, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(HomePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(HomePanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(380, 380, 380))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GenerarNuevaAsistencia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RefrescarTablaAsis, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(437, Short.MAX_VALUE))
            .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(HomePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(75, 75, 75)
                    .addComponent(GenerarNuevaAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(HomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(HomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(407, 407, 407))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private CardLayout cardLayout;

public void AditionalConfig() {
    // Configuraci√≥n de la pantalla y del frame
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int frameWidth = (int) (screenSize.width * 0.95);
    int frameHeight = (int) (screenSize.height * 0.95);
    
    int screenWidth = screenSize.width;
    int screenHeight = screenSize.height;

    // Configurar el tama√±o del JFrame
    if (screenWidth < 1700 && screenHeight < 900){
        this.setSize(frameWidth, frameHeight);
    }

    this.setLocationRelativeTo(null); // Centrar el JFrame
    
    // Configurar el nombre del usuario
    NombreUsuarioInstructor.setText(UserSession.getInstance().getNombres());

    // Configuraci√≥n del CardLayout para el panel principal
    cardLayout = new CardLayout();
    MainPanel.setLayout(cardLayout);
    InstructorUserPanel UserPanel = new InstructorUserPanel();
    InstructorSearchPanel SearchPanel = new InstructorSearchPanel();
    MainPanel.add(HomePanel, "HomePanel");
    MainPanel.add(UserPanel, "UserPanel");
    MainPanel.add(SearchPanel, "SearchPanel");
    
    if (screenWidth < 1920 || screenHeight < 1080) {
    
        // Crear un JScrollPane con barras de desplazamiento visibles
        JScrollPane scrollPane = new JScrollPane(jPanel1);
        scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);

        // Establecer el layout del JFrame a BorderLayout para que el scrollPane ocupe todo el espacio
        this.setLayout(new BorderLayout());

        // Agregar el JScrollPane al JFrame
        this.add(scrollPane, BorderLayout.CENTER);

        // Manejar el desplazamiento con la rueda del rat√≥n en cualquier parte del JFrame
        this.addMouseWheelListener(e -> {
            JScrollBar verticalScrollBar = scrollPane.getVerticalScrollBar();
            JScrollBar horizontalScrollBar = scrollPane.getHorizontalScrollBar();
            int notches = e.getWheelRotation();

            if (e.isShiftDown()) {
                // Si se presiona Shift, desplazarse horizontalmente
                int newValue = horizontalScrollBar.getValue() + notches * 20; // Ajustar la velocidad de desplazamiento
                horizontalScrollBar.setValue(newValue);
            } else {
                // De lo contrario, desplazarse verticalmente
                int newValue = verticalScrollBar.getValue() + notches * 20; // Ajustar la velocidad de desplazamiento
                verticalScrollBar.setValue(newValue);
            }
        });


    }
    // Obtener asistencias del instructor
    DefaultTableModel modeloTabla = new DefaultTableModel(
            new Object[]{"Fecha", "Clase", "Ambiente", "Ficha", "Instructor", "Tipo Asistencia", "Archivo Excel"},
            0
    );

    // Obtener el documento del usuario actual (Instructor) desde la sesi√≥n
    String documentoInstructor = UserSession.getInstance().getDocumento();

    // Llamar a la API para obtener las asistencias del instructor
    API_AsistenciasApplications asistenciasInstructor = new API_AsistenciasApplications();
    List<Map<String, Object>> asistencias = asistenciasInstructor.obtenerAsistenciasPorInstructor(documentoInstructor);


    // Rellenar el modelo de la tabla con los datos obtenidos
    for (Map<String, Object> asistencia : asistencias) {
        // Parsear la fecha en formato ISO 8601 si est√° en ese formato
        String Fecha = null;
        SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
        try {
            Date date = inputFormat.parse((String) asistencia.get("FechaRegistro"));

            // Formatear la fecha a un formato m√°s legible
            SimpleDateFormat outputFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            Fecha = outputFormat.format(date);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }

        modeloTabla.addRow(new Object[]{
                Fecha,
                asistencia.get("ClaseFormacion"),
                asistencia.get("Ambiente"),
                asistencia.get("Ficha"),
                asistencia.get("Instructor"),
                asistencia.get("TipoAsistencia"),
                "Abrir Excel"  // Bot√≥n en la √∫ltima columna para abrir el archivo
        });
    }

    // Configurar el modelo en la tabla
    TablaAsistencias.setModel(modeloTabla);

    // Configurar el bot√≥n en la √∫ltima columna para abrir el archivo Excel
    TableColumn archivoColumn = TablaAsistencias.getColumnModel().getColumn(6); // Columna de "Archivo Excel"
    archivoColumn.setCellRenderer(new ButtonColumnHelper.ButtonRendererExcel());  // Renderizador del bot√≥n
    archivoColumn.setCellEditor(new ButtonColumnHelper.ButtonEditorExcel(new JCheckBox(), TablaAsistencias, asistencias)); // Editor del bot√≥n con JTable y lista de asistencias
    this.setVisible(true);
}

    // M√©todo para actualizar la tabla de asistencias
    public void actualizarTabla(List<Map<String, Object>> datosAsistencia, JTable tabla) {
        // Obtener el modelo de la tabla actual
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();

        // Limpiar el modelo de la tabla antes de agregar los nuevos datos
        modelo.setRowCount(0);  // Esto elimina todas las filas existentes

        // Recorrer los datos y agregar cada registro al modelo
        for (Map<String, Object> asistencia : datosAsistencia) {
            // Parsear la fecha en formato ISO 8601 si est√° en ese formato
            String Fecha = null;
            SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
            try {
                Date date = inputFormat.parse((String) asistencia.get("FechaRegistro"));

                // Formatear la fecha a un formato m√°s legible
                SimpleDateFormat outputFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                Fecha = outputFormat.format(date);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }

            // Obtener otros valores de la asistencia
            String claseFormacion = asistencia.get("ClaseFormacion").toString();
            String ambiente = asistencia.get("Ambiente").toString();
            String ficha = asistencia.get("Ficha").toString();
            String instructor = asistencia.get("Instructor").toString();
            String tipoAsistencia = asistencia.get("TipoAsistencia").toString();

            // Agregar los datos como fila al modelo de la tabla
            modelo.addRow(new Object[]{
                    Fecha,  // Fecha formateada
                    claseFormacion,
                    ambiente,
                    ficha,
                    instructor,
                    tipoAsistencia
            });
        }

        // Actualizar la vista de la tabla
        modelo.fireTableDataChanged();  // Notifica a la tabla que los datos han cambiado
        // Configurar el bot√≥n en la √∫ltima columna para abrir el archivo Excel
        TableColumn archivoColumn = TablaAsistencias.getColumnModel().getColumn(6); // Columna de "Archivo Excel"
        archivoColumn.setCellRenderer(new ButtonColumnHelper.ButtonRendererExcel());  // Renderizador del bot√≥n
        archivoColumn.setCellEditor(new ButtonColumnHelper.ButtonEditorExcel(new JCheckBox(), TablaAsistencias, datosAsistencia)); // Editor del bot√≥n con JTable y lista de asistencias
    }
    private void ModifComponent(){
        ButtonStyler.applySecondaryStyle(MenuInicio);
        ButtonStyler.applySecondaryStyle(MenuBusqueda);
        ButtonStyler.applySecondaryStyle(MenuUsuario);

        ButtonStyler.applyPrimaryStyle(CerrarSesion);
        ButtonStyler.applyPrimaryStyle(GenerarNuevaAsistencia);

    }


    
    private void MenuBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuBusquedaActionPerformed
        cardLayout.show(MainPanel, "SearchPanel");
    }//GEN-LAST:event_MenuBusquedaActionPerformed

    private void MenuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuInicioActionPerformed
        cardLayout.show(MainPanel, "HomePanel");
    }//GEN-LAST:event_MenuInicioActionPerformed

    private void GenerarNuevaAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarNuevaAsistenciaActionPerformed
        // Crear el frame de Excel como un JDialog modal
        JDialog dialogoExcel = new JDialog(this, "Generar Nueva Asistencia", true); // 'true' indica que es modal

        // Crear una instancia de ExcelGenFrame (puede ser un JPanel si es m√°s f√°cil integrar)
        ExcelGenFrame abrirExcelFrame = new ExcelGenFrame();

        // Configurar el tama√±o del frame
        dialogoExcel.setSize(abrirExcelFrame.getSize());

        // A√±adir el contenido del ExcelGenFrame al JDialog
        dialogoExcel.add(abrirExcelFrame.getContentPane());

        // Configurar el JDialog y mostrarlo
        dialogoExcel.setLocationRelativeTo(this);  // Centrar en la ventana principal
        dialogoExcel.setVisible(true);  // Mostrar el di√°logo de forma modal
    }//GEN-LAST:event_GenerarNuevaAsistenciaActionPerformed

    private void CerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarSesionActionPerformed
       LoginFrame login = new LoginFrame();
       login.setVisible(true);
       this.dispose();
       UserSession.getInstance().clearSession();
    }//GEN-LAST:event_CerrarSesionActionPerformed

    private void MenuUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuUsuarioActionPerformed
        cardLayout.show(MainPanel, "UserPanel");
    }//GEN-LAST:event_MenuUsuarioActionPerformed

    private void RefrescarTablaAsisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefrescarTablaAsisActionPerformed
        // Crear una instancia del helper para actualizar la tabla
        API_AsistenciasApplications asistenciasInstructor = new API_AsistenciasApplications();
        List<Map<String, Object>> asistencias = asistenciasInstructor.obtenerAsistenciasPorInstructor(UserSession.getInstance().getDocumento());
        System.out.println("Actualizando Tabla");
        // Actualizar la tabla de asistencias
        actualizarTabla(asistencias, TablaAsistencias);

    }//GEN-LAST:event_RefrescarTablaAsisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstructorHomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstructorHomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstructorHomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstructorHomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstructorHomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CerrarSesion;
    private javax.swing.JButton GenerarNuevaAsistencia;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton MenuBusqueda;
    private javax.swing.JButton MenuInicio;
    private javax.swing.JButton MenuUsuario;
    private javax.swing.JLabel NombreUsuarioInstructor;
    private javax.swing.JButton RefrescarTablaAsis;
    private javax.swing.JTable TablaAsistencias;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
